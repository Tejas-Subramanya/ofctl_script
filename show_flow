#!/bin/bash

path=`dirname $0`
. ${path}/ofctl.conf

while getopts d:u:h OPT
do
    case $OPT in
	"d" )
	    dpid="${OPTARG}";;
	"u" )
	    url="${OPTARG}";;
	"h" )
	    echo "Usage: $CMDNAME [-d DPID] [-u URL]"
	    exit 0 ;;
	* )
	    echo "Usage: $CMDNAME [-d DPID] [-u URL]" 1>&2
	    exit 1 ;;
    esac
done

curl -s -X GET ${url}/stats/flow/${dpid} | jq -c -M '.["'${dpid}'"][]' > /tmp/check_flow.json
sed -i -e 's/OUTPUT:4294967293/OUTPUT:controller/g' /tmp/check_flow.json
if [ -s /tmp/check_flow.json ] ; then
    tables=( `jq -c '.table_id' < /tmp/check_flow.json | sort -n | uniq` )
else
    echo "Cannot get rules."
    exit 0
fi

for table_id in ${tables[@]} ;
do
     echo "table ${table_id}"
     jq -c -M 'select(.table_id == '${table_id}') | {'${show_field}'}' < /tmp/check_flow.json
done
echo ""

curl -s -X GET ${url}/stats/group/${dpid} | jq -c -M '.["'${dpid}'"][]' > /tmp/check_flow.json
if [ -s /tmp/check_flow.json ] ; then
    echo "group table"
    cat /tmp/check_flow.json
    echo ""
fi

curl -s -X GET ${url}/stats/meter/${dpid} | jq -c -M '.["'${dpid}'"][]' > /tmp/check_flow.json
if [ -s /tmp/check_flow.json ] ; then
    echo "meter table"
    cat /tmp/check_flow.json
    echo ""
fi

